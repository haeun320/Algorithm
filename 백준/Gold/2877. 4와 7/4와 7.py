'''
이진수처럼 생각: 4 = 0, 7 = 1

한자리: 2개 2**1 => 2
두자리: 4개 2**2 00 01 10 11 => 2 + 4
세자리: 8개 2**3 000 001 010 011 100 101 110 111 => 2 + 4 + 8
네자리: 2**4 = 16 => 2 + 4 + 8 + 16
다섯자리: 2**5 = 32개 => 2 + 4 + 8 + 16 + 32

n자리까지의 총 개수
2**1 + 2**2 + 2**3 + ... + 2**n
초항이 2, 공비가 2인 등비수열, 항의 개수 n
등비수열의 합 S = 2(1-2**n)/(1-2) = -1*(2-2**(n+1)) = 2**(n+1)-2

K가 n자리수라면
2**n - 2 < K <= 2**(n+1) - 2
2**n < K + 2 <= 2**(n+1)
n < log2(K + 2) <= n+1

n = ceil(log2(K + 2)) - 1

EX) K = 28이라면? -> 4자리
n = ceil(log2(30)) - 1 = 4

K - (n-1자리수까지의 개수) = 채워야할 이진수

EX) K = 28이라면? -> 28 - 14 = 14번째 수 -> 13을 2진수로 변환 (0부터 시작)
13 = 8 + 4 + 1 = 1101

위 이진수에다가 채워야하는 자릿수만큼 왼쪽에 0 패딩넣기
'''

import math

K = int(input())
n = math.ceil(math.log2(K+2)) - 1

d = K - (2**n - 2) - 1
b = format(d, f'0{n}b')

print(b.replace('0', '4').replace('1', '7'))
